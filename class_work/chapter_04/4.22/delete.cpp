// delete.cpp -- использование операции delete
#include <iostream>
#include <cstring>	// или string.h

using namespace std;
char *getname(void);	// прототип функции

int main() {
	char *name;		// создание указателя, но без хранилища
	name = getname();	// присваивание name адреса строки
	cout << name << " at " << (int *)name << "\n";
	delete[] name;		// освобождение памяти
	name = getname();	// повторное использование освобождённой памяти
	cout << name << " at " << (int *)name << "\n";
	delete[] name;		// снова освобождение памяти
	return 0;
}

char *getname() {				// возвращает указатель на новую строку
	char temp[80];				// временное хранилище
	cout << "Enter last name: ";		// ввод фамилии
	cin >> temp;
	char *pn = new char[strlen(temp) + 1];
	// В книге используется функция strcpy(pn, temp), однако в реализации C++ 2025
	// данная функция считаеся небезопасной и выведена, поэтому предлагается использовать
	// функцию копирования строк strcpy_s, которая требует 3 параметра:
	// 1. расположение строкового буфера назначения
	// 2. размер строкового буфера назначения в единицах char
	// 3. Исходная строка, завершающаяся нулем
	strcpy_s(pn, strlen(temp) + 1, temp);	// копирование строки в меньшее пространство
	return pn;				// по завершении функции temp теряется
}
